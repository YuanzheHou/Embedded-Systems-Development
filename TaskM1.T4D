const uint16_t t1_load = 0;
const uint16_t t1_comp = 31250;

int pinLED_Green = 7; // D7 links to the Green LED
int pinLED_Yellow = 6; // D6 links to the Yellow LED
int pinLED_Red = 5; // D5 links to the Red LED
int pinLED_Blue = 4; // D4 links to the Blue LED

int Pin_PIR_1 = 13; // D13 links to the first PIR sensor
int Pin_PIR_2 = 12; // D12 links to the second PIR sensor
int Pin_PIR_3 = 11; // D11 links to the third PIR sensor
int Pin_PIR_4 = 10; // D10 links to the fourth PIR sensor

int First_State = LOW;
int Second_State = LOW;
int Third_State = LOW;
int Fourth_State = LOW;

void setup()
{
  Serial.begin(9600);
  pinMode(pinLED_Green,OUTPUT); 
  pinMode(pinLED_Yellow,OUTPUT);
  pinMode(pinLED_Red,OUTPUT);
  pinMode(pinLED_Blue,OUTPUT);
  // Set D4,D5,D6,D7 as outputs
  PCICR |= B00000001;
  PCMSK0 |= B00111100; 
  // set the CTC mode
  TCCR1B &= ~(1 << WGM13);
  TCCR1B |= (1 << WGM12);
  // set to the prescaler of 256
  TCCR1B |= (1 << CS12);
  TCCR1B &= ~(1 << CS11);
  TCCR1B &= ~(1 << CS10);
  // Reset Timer1 and set compare set
  TCNT1= t1_load;
  OCR1A= t1_comp;
  // Enable Timer1 compare interrupt
  TIMSK1 = (1 << OCIE1A);
  // Enable global interrupts
  
  DDRB &= B11000011; //set D10,11,12,13 as input
  //13-->PB5,12-->PB4,11-->PB3,10-->PB2
  
  sei();//Turn on interrupt
}

void loop()
{
  delay(3000);
}

ISR(PCINT0_vect)
{
  
  First_State = (PINB & (B00100000))>>5;
  //Get the PINB and then pull out the fifth bit of data to get the level state of pin 13
  Second_State = (PINB & (B00010000))>>4;
  //The PINB is retrieved and the 4th bit data is retrieved to obtain the level status of pin 12
  Third_State = (PINB & (B00001000))>>3;
  //The PINB is retrieved and the third bit of data is retrieved to obtain the level state of pin 11
  Fourth_State = (PINB & (B00000100))>>2;
  //Get the PINB and then pull out the second bit of data to get the level state of pin 10
} 

void timer_trigger()
{
  cli(); //close all interrupts
  if(First_State == HIGH)
  {
    Serial.println("The first PIR sensor with Green LED was detected!");
    digitalWrite(pinLED_Green, HIGH);
  }
  digitalWrite(pinLED_Green, LOW);
  if(Second_State == HIGH)
  {
    Serial.println("The second PIR sensor with Yellow LED was detected!");
    digitalWrite(pinLED_Yellow, HIGH);
  }
  digitalWrite(pinLED_Yellow, LOW);
  if(Third_State == HIGH)
  {
    Serial.println("The third PIR sensor with Red LED was detected!");
    digitalWrite(pinLED_Red, HIGH);
  }
  digitalWrite(pinLED_Red, LOW);
  if(Fourth_State == HIGH)
  {
    Serial.println("The fourth PIR sensor with Blue LED was detected!");
    digitalWrite(pinLED_Blue, HIGH);
  }
  digitalWrite(pinLED_Blue, LOW);
  sei();//Turn on all interrupts
}

ISR(TIMER1_COMPA_vect)
{
  timer_trigger();
}
   
